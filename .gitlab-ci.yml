image: alpine:latest


stages:
    - start
    - package
    - upload
    - cleanup

#################################
#######       START       #######
#################################

####### START
start:
    stage: start

    variables:
        GIT_STRATEGY: none

    script:
        - mkdir -p tmp
        - echo `date +%Y-%m-%d` > tmp/date.txt
        - echo `date +%H-%M-%S` > tmp/time.txt

    artifacts:
        paths:
            - tmp/

        expire_in: 1d

    only:
        - tags

    except:
        - master
        - branches

#################################
#######      PACKAGE      #######
#################################

#######    Package Release    #######
package_release:
    stage: package

    script:
        - apk add zip grep coreutils jq moreutils
        #create some variables into temp folder
        - PKG_NAME=$PLATFORM_NAME-$CI_COMMIT_TAG
        - PKG_NAME_PIO=framework-arduino-samd-arancino-$CI_COMMIT_TAG

        - echo $PKG_NAME > tmp/pgk_name.txt
        - echo $PKG_NAME_PIO > tmp/pkg_name_pio.txt
        - echo $CI_PROJECT_NAME > tmp/repo_name.txt
        - echo $CI_COMMIT_TAG > tmp/target_path.txt

        - sed -i "s:\(ARANCINO_CORE_VERSION\) .*:\1 \"$CI_COMMIT_TAG\":" ./cores/arancino/Arduino.h
        - sed -i "s:\(version\)=.*:\1=$CI_COMMIT_TAG:" ./platform.txt
        - jq --arg tag_ver ${CI_COMMIT_TAG} '.version = $tag_ver' package.json|sponge package.json

        - cd ..
        #tar files and move temp folder back
        - tar --exclude=tmp --exclude=.git* --exclude=*.DS_Store* -cvjf $PKG_NAME.tar.bz2 $CI_PROJECT_NAME
        
        # pio packaging
        - cp -r $CI_PROJECT_NAME framework-arduino-samd-arancino
        - tar --exclude=tmp --exclude=.git* --exclude=*.DS_Store* -cvjf $PKG_NAME_PIO.tar.bz2 framework-arduino-samd-arancino

        #move tar into temp folder
        - cd $CI_PROJECT_NAME
        - mv ../$PKG_NAME.tar.bz2 tmp/
        - mv ../$PKG_NAME_PIO.tar.bz2 tmp/

        #create files containing sha 256 checksum and size in bytes of the tar file
        - sha256sum tmp/$PKG_NAME.tar.bz2 | awk '{print $1}' > tmp/SHA256.txt
        - du -b tmp/$PKG_NAME.tar.bz2 | awk {'print $1}' > tmp/SIZE.txt
        - echo FILENAME $PKG_NAME.tar.bz2
        - echo SHA-256 `cat tmp/SHA256.txt`
        - echo SIZE `cat tmp/SIZE.txt`
        - echo PKG_NAME `cat tmp/pgk_name.txt`

        # same step above but for PIO
        - sha256sum tmp/$PKG_NAME_PIO.tar.bz2 | awk '{print $1}' > tmp/SHA256_pio.txt
        - du -b tmp/$PKG_NAME_PIO.tar.bz2 | awk {'print $1}' > tmp/SIZE_pio.txt
        - echo FILENAME_PIO $PKG_NAME_PIO.tar.bz2
        - echo SHA-256-PIO `cat tmp/SHA256_pio.txt`
        - echo SIZE_PIO `cat tmp/SIZE_pio.txt`
        - echo PKG_NAME_PIO `cat tmp/pgk_name_pio.txt`

    dependencies:
        - start

    artifacts:
        paths:
            - tmp/
    except:
        - branches
        - master

    only:
        - tags

#################################
#######       UPLOAD      #######
#################################

#######    Upload Staging and Release   #######
upload:

    stage: upload

    variables:
        GIT_STRATEGY: none

    script:
        - DATE="$(cat tmp/date.txt)"
        - TIME="$(cat tmp/time.txt)"
        - PKG_NAME="$(cat tmp/pgk_name.txt)"
        - PKG_NAME_PIO="$(cat tmp/pkg_name_pio.txt)"
        - REPO_NAME="$(cat tmp/repo_name.txt)"
        - TARGET_PATH="$(cat tmp/target_path.txt)"
        - apk add curl
        # Upload to Artifactory
        - curl -u $REPO_USR:$REPO_PWD -T tmp/$PKG_NAME.tar.bz2 "${REPO_BASE_URL}/artifactory/${REPO_NAME}/${TARGET_PATH}/${PKG_NAME}.tar.bz2"
        - curl -u $REPO_USR:$REPO_PWD -T tmp/$PKG_NAME_PIO.tar.bz2 "${REPO_BASE_URL}/artifactory/${REPO_NAME_PIO}/${TARGET_PATH}/${PKG_NAME_PIO}.tar.bz2"

#dependencies:
#    - package

    only:
        - tags

    except:
        - master
        - branches

#################################
#######      CLEANUP      #######
#################################

#######    Cleanup Job    #######
cleanup:
    stage: cleanup

    variables:
        GIT_STRATEGY: none
    
    script:
        - echo "Cleaning up"
        - rm -rf tmp/
    
    when: always

    only:
        - tags

    except:
        - master
        - branches
